autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2

ingress:
  enabled: true
  type: nginx
  tls:
    dev-status-dashboard:
      secretName: status-test.dnatls.uw.edu-ingress-cert
      hosts:
        - status-test.dnatls.uw.edu
  hosts:
    dev-status-dashboard:
      host: status-test.dnatls.uw.edu
      paths:
        - "/"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/limit-rps: "10"

repo: status-dashboard
instance: test

containerPort: 8000

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 25m
    memory: 64Mi

service:
  enabled: true
  ports:
    - port: 80
      targetPort: 8000
      name: http

deploymentInitialization:
  enabled: false

database:
  engine: null

metrics:
  enabled: true

readiness:
  enabled: true
  command:
    - "/scripts/ready.sh"


lifecycle:
  enabled: false

environmentVariables:
  - name: ENV
    value: dev
  - name: APPLICATION_INSTANCE
    value: test
  - name: DASHBOARD_CONFIG_FILE
    value: /app/config/dashboard.yml

podVolumes:
  status-dashboard-config:
    volume:
      configMap:
        name: status-dashboard-config
    mount:
      mountPath: /app/config/dashboard.yml
      subPath: dashboard.yml
    containers: [ base ]

configmaps:
  status-dashboard-config:
    dashboard.yml: |
      variables:
        prometheus_api_server: http://prometheus-k8s.mci-monitoring.svc.cluster.local:9090
        application_instance: $APPLICATION_INSTANCE
        sample_period: 10m
        timezone: US/Pacific
      web-service-block: &web-service-block
        query: (sum(increase(restclient_response_status_code_bucket{exported_service="${service}", job="${application}-prod-${application_instance}", le=~"400(.0)?"}[${sample_period}]) OR vector(1))) / (sum(increase(restclient_response_status_code_bucket{exported_service="${service}", job="${application}-prod-${application_instance}", le=~"500(.0)?"}[${sample_period}]) OR vector(1)))
        threshold:
          - limit: 0.75
            description: Critical
          - limit: 0.99
            description: Degraded
      dashboards:
        # application's display name
        - app_name: MyUW
          # status page url path: /{app_path}
          app_path: myuw
          # bucket supplying dynamic status notifications
          app_notification_url: https://storage.googleapis.com/status-dashboard/myuw/update.html?update=now
          # status page cache timeout in minutes (optional: default is 5)
          cache_timeout: 1
          variables:
            application: myuw
          panels:
            - name: MyUW Status
              services:
                # list of application components and the prometheus query to determine health
                - name: MyUW
                  description: UW student and faculty information portal
                  link: https://test.my.uw.edu
                  #
                  # query should return a scalar value to test the threshold values against
                  #
                  query: (sum(increase(nginx_ingress_controller_requests{exported_service="myuw-prod-${application_instance}",controller_class=~"k8s.io/ingress-nginx",namespace=~"ingress-nginx",status=~"([123]..|40[134]|499|543)"}[${sample_period}]) OR vector(1))) / (sum(increase(nginx_ingress_controller_requests{exported_service="myuw-prod-${application_instance}",controller_class=~"k8s.io/ingress-nginx",namespace=~"ingress-nginx"}[${sample_period}]) OR vector(1)))
                  #
                  # query results less than the threshold value indicates the service is struggling and displays the corresponding description
                  #
                  threshold:
                    - limit: 0.75
                      description: Critical
                    - limit: 0.99
                      description: Degraded
            - name: Critical Services
              description: Services required to provide MyUW access and content.
              critical_description: As not all critical services appear healthy, MyUW is likely unavailable and serving an error page.
              services:
                # A list of dependent services and the query to determine its healthiness
                - <<: *web-service-block
                  name: Key Web Service (KWS)
                  description: Required for secure service access
                  level: Blocker
                  variables:
                    service: kws
                - <<: *web-service-block
                  name: Group Web Service (GWS)
                  description: Required for user affiliation information
                  level: Blocker
                  variables:
                    service: gws
                - <<: *web-service-block
                  name: Person Web Service (PWS)
                  description: Required for specific user information
                  level: Blocker
                  variables:
                    service: pws
                - <<: *web-service-block
                  name: Student Web Service (SWS)
                  description: Source of course, personal enrollment, notice, and registration information
                  variables:
                    service: sws
                - <<: *web-service-block
                  name: IdP OIDC Keyset
                  description: Required for mobile application authentication
                  level: Blocker
                  variables:
                    service: uwidp
                - <<: *web-service-block
                  name: UWNetID Web Service
                  description: Source of uwnetid password and subscription information
                  variables:
                    service: uwnetid
            - name: Secondary Services
              description: Services providing specific MyUW content.
              critical_description: As not all services appear healthy, some MyUW content may be missing or displaying an error message.
              services:
                - <<: *web-service-block
                  name: SDB Applicant Service
                  description: Source of undergrad application information
                  variables:
                    service: sdbmyuw
                - <<: *web-service-block
                  name: MyPlan Auth Service
                  description: Source of MyPlan authentication
                  variables:
                    service: myplan_auth
                - <<: *web-service-block
                  name: MyPlan Service
                  description: Source of MyPlan course registration information
                  variables:
                    service: myplan
                - <<: *web-service-block
                  name: Canvas Course Service
                  description: Source of Canvas course information
                  variables:
                    service: canvas
                - <<: *web-service-block
                  name: Course Statistics Dashboard (CoDa)
                  description: Source of current and historic student statistics information
                  variables:
                    service: coda
                - <<: *web-service-block
                  name: Gradepage Service
                  description: Source of grade submission information
                  variables:
                    service: gradepage
                - <<: *web-service-block
                  name: MailMan Service
                  description: Source of instructor class mailing list request data
                  variables:
                    service: mailman
                - <<: *web-service-block
                  name: Housing and Food Services (HFS)
                  description: Provides employee/student Husky card, student housing and dining balance information
                  variables:
                    service: hfs
                - <<: *web-service-block
                  name: MyGrad Service
                  description: Source of graduate committee, degree, leave, petition information
                  variables:
                    service: grad
                - <<: *web-service-block
                  name: Library Account Service
                  description: Source of user library account information
                  variables:
                    service: libraries
                - <<: *web-service-block
                  name: Library Curriculum Service
                  description: Source of library Curriculum information
                  variables:
                    service: libcurric
                - <<: *web-service-block
                  name: UBookstore Textbook and Day One Access Materials
                  description: Source of course textbook information
                  variables:
                    service: book
                - <<: *web-service-block
                  name: Iasystem Instructor Course Evaluation Services
                  description: Source of course evaluation information
                  variables:
                    service: iasystem
                - <<: *web-service-block
                  name: U-PASS Service
                  description: Source of employee/student bus pass information
                  variables:
                    service: upass
        - app_name: Provision Request Tool
          # status page url path: /{app_path}
          app_path: provision
          # status page cache timeout (optional: default is 5 minutes)
          cache_timeout: 1
          variables:
            application: prt
          panels:
            - name: Provision Request Tool (PRT) Status
              services:
                # list of application components and the prometheus query to determine health
                - name: Provision Request Tool
                  description: Service provisioning and lifecycle manager
                  link: https://test.provision.uw.edu
                  query: (sum(increase(nginx_ingress_controller_requests{exported_service="${application}-prod-${application_instance}",controller_class=~"k8s.io/ingress-nginx",namespace=~"ingress-nginx",status=~"([123]..|40[134]|499|543)"}[${sample_period}]) OR vector(1))) / (sum(increase(nginx_ingress_controller_requests{exported_service="${application}-prod-${application_instance}",controller_class=~"k8s.io/ingress-nginx",namespace=~"ingress-nginx"}[${sample_period}]) OR vector(1)))
                  threshold:
                    - limit: 0.75
                      description: Critical
                    - limit: 0.99
                      description: Degraded
            - name: Dependent Service Status
              description: Services used for provisioning
              services:
                # list of each dependent service and the test to determine its healthiness
                - <<: *web-service-block
                  name: UW Person Web Service
                  description: Source of personal information
                  variables:
                    service: pws
                - <<: *web-service-block
                  name: Groups Web Service
                  description: Provides UW institutional group information
                  variables:
                    service: gws
                - <<: *web-service-block
                  name: UW NetID Web Service
                  description: Source of personal information
                  variables:
                    service: uwnetid
                - <<: *web-service-block
                  name: MSCA Web Service
                  description: UW Microsoft Collaborative Applications API
                  variables:
                    service: msca
                - <<: *web-service-block
                  name: ITBill Web Service
                  description: UW Billing Subscription Service API
                  variables:
                    service: itbill
